services:
  mcp-server:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - MCP_SERVER_NAME=eregulations
      - MCP_SERVER_PORT=8000
      - MCP_HOST=0.0.0.0
      - MCP_TRANSPORT=auto
      - MCP_LOG_LEVEL=INFO
      - EREGULATIONS_API_URL=${EREGULATIONS_API_URL:-https://api.eregulations.org}
      - EREGULATIONS_API_VERSION=${EREGULATIONS_API_VERSION:-v1}
      - EREGULATIONS_API_KEY=${EREGULATIONS_API_KEY:-}
      - CACHE_ENABLED=true
      - CACHE_TTL=3600
    ports:
      - "${MCP_SERVER_PORT:-8000}:8000"
    volumes:
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    depends_on:
      - mcp-server

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    ports:
      - "3001:3000"
    depends_on:
      - prometheus

volumes:
  prometheus_data:
